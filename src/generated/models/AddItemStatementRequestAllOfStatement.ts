/* tslint:disable */
/* eslint-disable */
/**
 * Wikibase REST API
 * OpenAPI definition of Wikibase REST API
 *
 * The version of the OpenAPI document: 1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AddItemStatementRequestAllOfStatement
 */
export interface AddItemStatementRequestAllOfStatement {
    /**
     * The globally unique identifier for this Statement
     * @type {string}
     * @memberof AddItemStatementRequestAllOfStatement
     */
    readonly id?: string;
    /**
     * The rank of the Statement
     * @type {string}
     * @memberof AddItemStatementRequestAllOfStatement
     */
    rank?: AddItemStatementRequestAllOfStatementRankEnum;
    /**
     * 
     * @type {any}
     * @memberof AddItemStatementRequestAllOfStatement
     */
    property: any | null;
    /**
     * 
     * @type {any}
     * @memberof AddItemStatementRequestAllOfStatement
     */
    value: any | null;
    /**
     * 
     * @type {any}
     * @memberof AddItemStatementRequestAllOfStatement
     */
    qualifiers?: any | null;
    /**
     * 
     * @type {any}
     * @memberof AddItemStatementRequestAllOfStatement
     */
    references?: any | null;
}


/**
 * @export
 */
export const AddItemStatementRequestAllOfStatementRankEnum = {
    Deprecated: 'deprecated',
    Normal: 'normal',
    Preferred: 'preferred'
} as const;
export type AddItemStatementRequestAllOfStatementRankEnum = typeof AddItemStatementRequestAllOfStatementRankEnum[keyof typeof AddItemStatementRequestAllOfStatementRankEnum];


/**
 * Check if a given object implements the AddItemStatementRequestAllOfStatement interface.
 */
export function instanceOfAddItemStatementRequestAllOfStatement(value: object): value is AddItemStatementRequestAllOfStatement {
    if (!('property' in value) || value['property'] === undefined) return false;
    if (!('value' in value) || value['value'] === undefined) return false;
    return true;
}

export function AddItemStatementRequestAllOfStatementFromJSON(json: any): AddItemStatementRequestAllOfStatement {
    return AddItemStatementRequestAllOfStatementFromJSONTyped(json, false);
}

export function AddItemStatementRequestAllOfStatementFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddItemStatementRequestAllOfStatement {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'rank': json['rank'] == null ? undefined : json['rank'],
        'property': json['property'],
        'value': json['value'],
        'qualifiers': json['qualifiers'] == null ? undefined : json['qualifiers'],
        'references': json['references'] == null ? undefined : json['references'],
    };
}

export function AddItemStatementRequestAllOfStatementToJSON(value?: Omit<AddItemStatementRequestAllOfStatement, 'id'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'rank': value['rank'],
        'property': value['property'],
        'value': value['value'],
        'qualifiers': value['qualifiers'],
        'references': value['references'],
    };
}

