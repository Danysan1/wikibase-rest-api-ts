/* tslint:disable */
/* eslint-disable */
/**
 * Wikibase REST API
 * OpenAPI definition of Wikibase REST API
 *
 * The version of the OpenAPI document: 1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { StatementProperty } from './StatementProperty';
import {
    StatementPropertyFromJSON,
    StatementPropertyFromJSONTyped,
    StatementPropertyToJSON,
} from './StatementProperty';
import type { StatementValue } from './StatementValue';
import {
    StatementValueFromJSON,
    StatementValueFromJSONTyped,
    StatementValueToJSON,
} from './StatementValue';

/**
 * 
 * @export
 * @interface StatementQualifiersInner
 */
export interface StatementQualifiersInner {
    /**
     * 
     * @type {StatementProperty}
     * @memberof StatementQualifiersInner
     */
    property?: StatementProperty;
    /**
     * 
     * @type {StatementValue}
     * @memberof StatementQualifiersInner
     */
    value?: StatementValue;
}

/**
 * Check if a given object implements the StatementQualifiersInner interface.
 */
export function instanceOfStatementQualifiersInner(value: object): value is StatementQualifiersInner {
    return true;
}

export function StatementQualifiersInnerFromJSON(json: any): StatementQualifiersInner {
    return StatementQualifiersInnerFromJSONTyped(json, false);
}

export function StatementQualifiersInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): StatementQualifiersInner {
    if (json == null) {
        return json;
    }
    return {
        
        'property': json['property'] == null ? undefined : StatementPropertyFromJSON(json['property']),
        'value': json['value'] == null ? undefined : StatementValueFromJSON(json['value']),
    };
}

export function StatementQualifiersInnerToJSON(value?: StatementQualifiersInner | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'property': StatementPropertyToJSON(value['property']),
        'value': StatementValueToJSON(value['value']),
    };
}

