/* tslint:disable */
/* eslint-disable */
/**
 * Wikibase REST API
 * OpenAPI definition of Wikibase REST API
 *
 * The version of the OpenAPI document: 1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AddProperty201Response
 */
export interface AddProperty201Response {
    /**
     * 
     * @type {string}
     * @memberof AddProperty201Response
     */
    readonly id: string;
    /**
     * 
     * @type {string}
     * @memberof AddProperty201Response
     */
    readonly type: string;
    /**
     * 
     * @type {string}
     * @memberof AddProperty201Response
     */
    dataType: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof AddProperty201Response
     */
    labels: { [key: string]: string; };
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof AddProperty201Response
     */
    descriptions: { [key: string]: string; };
    /**
     * 
     * @type {{ [key: string]: Array<string>; }}
     * @memberof AddProperty201Response
     */
    aliases: { [key: string]: Array<string>; };
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof AddProperty201Response
     */
    statements: { [key: string]: any; } | null;
}

/**
 * Check if a given object implements the AddProperty201Response interface.
 */
export function instanceOfAddProperty201Response(value: object): value is AddProperty201Response {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('dataType' in value) || value['dataType'] === undefined) return false;
    if (!('labels' in value) || value['labels'] === undefined) return false;
    if (!('descriptions' in value) || value['descriptions'] === undefined) return false;
    if (!('aliases' in value) || value['aliases'] === undefined) return false;
    if (!('statements' in value) || value['statements'] === undefined) return false;
    return true;
}

export function AddProperty201ResponseFromJSON(json: any): AddProperty201Response {
    return AddProperty201ResponseFromJSONTyped(json, false);
}

export function AddProperty201ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddProperty201Response {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'type': json['type'],
        'dataType': json['data_type'],
        'labels': json['labels'],
        'descriptions': json['descriptions'],
        'aliases': json['aliases'],
        'statements': json['statements'],
    };
}

export function AddProperty201ResponseToJSON(value?: Omit<AddProperty201Response, 'id'|'type'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'data_type': value['dataType'],
        'labels': value['labels'],
        'descriptions': value['descriptions'],
        'aliases': value['aliases'],
        'statements': value['statements'],
    };
}

